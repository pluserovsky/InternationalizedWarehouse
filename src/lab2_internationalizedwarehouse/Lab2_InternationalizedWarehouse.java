/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab2_internationalizedwarehouse;

import java.awt.BorderLayout;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.Field;
import java.text.ChoiceFormat;
import java.text.Format;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.util.*;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;

/**
 * User GUi with buyer role.
 *
 * @author Lukasz Broll / Krzysztof Dombek
 */
public class Lab2_InternationalizedWarehouse extends javax.swing.JFrame {

    String filePicPath;
    ItemsList itemsList;
    ItemsList storageList;
    ResourceBundle messages;

    Locale enLocale;
    Locale plLocale;

    /**
     * Creates new form guiBuyer
     */
    public Lab2_InternationalizedWarehouse() {
        enLocale = new Locale("en", "US");
        plLocale = new Locale("pl", "PL");
        initComponents();
        initStorage();
        itemsList = new ItemsList();
        plLangRadioButton.doClick();
        loadButton.doClick();
        langButtonGroup.add(plLangRadioButton);
        langButtonGroup.add(enLangRadioButton);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        langButtonGroup = new javax.swing.ButtonGroup();
        addItemButton = new javax.swing.JButton();
        removeItemButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        picturePanel = new javax.swing.JPanel();
        plLangRadioButton = new javax.swing.JRadioButton();
        enLangRadioButton = new javax.swing.JRadioButton();
        itemComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Multilang Warehouse");

        addItemButton.setText("add");
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        removeItemButton.setText("remove");
        removeItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemButtonActionPerformed(evt);
            }
        });

        Field[] fieldsNames = StorageItem.class.getDeclaredFields();
        String[] columnNames = new String[fieldsNames.length];
        for (int i = 1; i < fieldsNames.length; i++) {
            columnNames[i] = fieldsNames[i].getName();
        }
        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            null,
            columnNames
        ));
        itemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(itemsTable);

        saveButton.setText("save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        loadButton.setText("load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout picturePanelLayout = new javax.swing.GroupLayout(picturePanel);
        picturePanel.setLayout(picturePanelLayout);
        picturePanelLayout.setHorizontalGroup(
            picturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );
        picturePanelLayout.setVerticalGroup(
            picturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );

        plLangRadioButton.setText("Polski");
        plLangRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plLangRadioButtonActionPerformed(evt);
            }
        });

        enLangRadioButton.setText("English");
        enLangRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enLangRadioButtonActionPerformed(evt);
            }
        });

        itemComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeItemButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(picturePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enLangRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(plLangRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addItemButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeItemButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadButton)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(picturePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(plLangRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enLangRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed

        int selectedIndex = itemComboBox.getSelectedIndex() + 1;
        itemsList.add(storageList.getItem(selectedIndex));
        // send to itemsTable
        printTable();
    }//GEN-LAST:event_addItemButtonActionPerformed

    private void removeItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemButtonActionPerformed

        int selectedIndex = -1;
        String selectedName;
        //get selected index from combobox
        for (int i = 0; i < itemsList.getStorageItems().size(); i++) {
            if (itemsTable.isRowSelected(i)) {
                selectedIndex = (Integer) itemsTable.getModel().getValueAt(i, 3);
                itemsList.remove(itemsList.getItem(selectedIndex));
            }
        }
        printTable();
    }//GEN-LAST:event_removeItemButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        JAXBContext jaxbContext;
        try {
            jaxbContext = JAXBContext.newInstance(ItemsList.class);
            Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
            jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            jaxbMarshaller.marshal(itemsList, new File("G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\items.xml"));
        } catch (JAXBException ex) {
            Logger.getLogger(Lab2_InternationalizedWarehouse.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        File file = new File("G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\items.xml");
        if (file.exists()) {
            JAXBContext jaxbContext;
            try {

                jaxbContext = JAXBContext.newInstance(ItemsList.class);
                Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
                itemsList = (ItemsList) jaxbUnmarshaller.unmarshal(file);
            } catch (JAXBException ex) {
                Logger.getLogger(Lab2_InternationalizedWarehouse.class.getName()).log(Level.SEVERE, null, ex);
            }

            Field[] fieldsNames = StorageItem.class.getDeclaredFields();
            String[] columnNames = new String[fieldsNames.length];
            for (int i = 0; i < fieldsNames.length; i++) {
                columnNames[i] = messages.getString(fieldsNames[i].getName());
            }
            Object[][] data = new Object[itemsList.getStorageItems().size()][columnNames.length];
            for (int i = 0; i < data.length; i++) {
                data[i][0] = itemsList.getStorageItems().get(i).getPicPath();
                data[i][1] = messages.getString(itemsList.getStorageItems().get(i).getItem());
                data[i][2] = FormatQuantity(itemsList.getStorageItems().get(i).getPrize());

                data[i][3] = itemsList.getStorageItems().get(i).getId();
            }
            itemsTable.setModel(new javax.swing.table.DefaultTableModel(data, columnNames));
            for (int i = 0; i < storageList.getStorageItems().size(); i++) {
                itemComboBox.addItem(messages.getString(storageList.getStorageItems().get(i).getItem()));

            }
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        printTable();
        itemComboBox.removeAllItems();
        for (int i = 0; i < storageList.getStorageItems().size(); i++) {
            itemComboBox.addItem(messages.getString(storageList.getStorageItems().get(i).getItem()));

        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void itemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTableMouseClicked
        int selectedIndex;
        //get selected index from combobox
        for (int i = 0; i < itemsList.getStorageItems().size(); i++) {
            if (itemsTable.isRowSelected(i)) {
                selectedIndex = (Integer) itemsTable.getModel().getValueAt(i, 3);

                ImageIcon image = new ImageIcon((itemsList.getItem(selectedIndex).getPicPath()));
                JLabel imageLabel = new JLabel(image);
                picturePanel.removeAll();
                picturePanel.setLayout(new java.awt.BorderLayout());
                picturePanel.add(imageLabel, BorderLayout.CENTER);
                picturePanel.validate();

            }
        }
    }//GEN-LAST:event_itemsTableMouseClicked

    private void plLangRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plLangRadioButtonActionPerformed
        FileInputStream fis;
        try {
            fis = new FileInputStream("G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\MessagesBundle_pl_PL.properties");
            messages = new PropertyResourceBundle(fis);
            //messages = ResourceBundle.getBundle("MessagesBundle", plLocale);
            changeLanguage();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Lab2_InternationalizedWarehouse.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Lab2_InternationalizedWarehouse.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_plLangRadioButtonActionPerformed

    private void enLangRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enLangRadioButtonActionPerformed
        FileInputStream fis;
        try {
            fis = new FileInputStream("G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\MessagesBundle.properties");
            messages = new PropertyResourceBundle(fis);
            //messages = ResourceBundle.getBundle("MessagesBundle", plLocale);
            changeLanguage();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Lab2_InternationalizedWarehouse.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Lab2_InternationalizedWarehouse.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_enLangRadioButtonActionPerformed

    private void itemComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemComboBoxActionPerformed

    }//GEN-LAST:event_itemComboBoxActionPerformed
    private void changeLanguage() {
        addItemButton.setText(messages.getString("add"));
        removeItemButton.setText(messages.getString("remove"));
        addItemButton.setText(messages.getString("add"));

        refreshButton.setText(messages.getString("refresh"));
        saveButton.setText(messages.getString("save"));
        loadButton.setText(messages.getString("load"));
        //itemComboBox.set(messages.getString("name"));

        this.setTitle(messages.getString("warehous"));
        refreshButton.doClick();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            // Set cross-platform Java L&F (also called "Metal")
            // Set System L&F
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lab2_InternationalizedWarehouse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Lab2_InternationalizedWarehouse().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JRadioButton enLangRadioButton;
    private javax.swing.JComboBox<String> itemComboBox;
    private javax.swing.JTable itemsTable;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.ButtonGroup langButtonGroup;
    private javax.swing.JButton loadButton;
    private javax.swing.JPanel picturePanel;
    private javax.swing.JRadioButton plLangRadioButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton removeItemButton;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

    private void initStorage() {
        storageList = new ItemsList();
        storageList.add(new StorageItem(1, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\pen.png", "pen", 3));
        storageList.add(new StorageItem(2, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\pencil.png", "pencil", 2));
        storageList.add(new StorageItem(3, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\book.jpg", "book", 21));
        storageList.add(new StorageItem(4, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\rubber.png", "rubber", 1));
        storageList.add(new StorageItem(5, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\calculator.png", "calculator", 15));
        storageList.add(new StorageItem(6, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\cover.jpg", "cover", 4));
        storageList.add(new StorageItem(7, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\globe.png", "globe", 46));
        storageList.add(new StorageItem(8, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\map.jpg", "map", 10));
        storageList.add(new StorageItem(9, "G:\\Lukasz\\Desktop\\PWR\\semestr_6\\java\\netbans\\lab2_InternationalizedWarehouse\\marker.png", "marker", 6));

    }

    private void printTable() {
        Field[] fieldsNames = StorageItem.class.getDeclaredFields();
        String[] columnNames = new String[fieldsNames.length];
        for (int i = 0; i < fieldsNames.length; i++) {
            columnNames[i] = messages.getString(fieldsNames[i].getName());
        }
        Object[][] data = new Object[itemsList.getStorageItems().size()][columnNames.length];
        for (int i = 0; i < data.length; i++) {
            data[i][0] = itemsList.getStorageItems().get(i).getPicPath();
            data[i][1] = messages.getString(itemsList.getStorageItems().get(i).getItem());
            data[i][2] = FormatQuantity(itemsList.getStorageItems().get(i).getPrize());
            data[i][3] = itemsList.getStorageItems().get(i).getId();
        }
        itemsTable.setModel(new javax.swing.table.DefaultTableModel(data, columnNames));
    }

    private String FormatQuantity(int quantity) {
        MessageFormat messageForm = new MessageFormat("");
        if (enLangRadioButton.isSelected()) {
            messageForm.setLocale(enLocale);
        } else if (plLangRadioButton.isSelected()) {
            messageForm.setLocale(plLocale);
        }

        String[] fileStrings = new String[3];
        fileStrings[0] = messages.getString("onePrize");
        fileStrings[1] = messages.getString("twoPrize");
        fileStrings[2] = messages.getString("multiplePrize");

        double[]  fileLimits = new double[3];

        fileLimits[0] = 1;
        fileLimits[1] = 2;
        fileLimits[2] = 5;
        fileStrings[0] = messages.getString("onePrize");
        fileStrings[1] = messages.getString("twoPrize");
        fileStrings[2] = messages.getString("multiplePrize");

        ChoiceFormat choiceForm = new ChoiceFormat(fileLimits, fileStrings);
        String pattern = messages.getString("pattern");
        messageForm.applyPattern(pattern);
        Format[] formats = {choiceForm, null, NumberFormat.getInstance()};
        messageForm.setFormats(formats);
        Object[] messageArguments = {quantity};

        return messageForm.format(messageArguments);
    }
}
